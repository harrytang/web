name: Test

on:
  workflow_call:

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    environment:
      name: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm run test:cov
        env:
          NEXT_PUBLIC_SITE_URL: ${{ vars.NEXT_PUBLIC_STRAPI_API_URL }}
          NEXT_PUBLIC_SITE_NAME: ${{ vars.NEXT_PUBLIC_SITE_NAME }}
          NEXT_PUBLIC_STRAPI_API_URL: ${{ vars.NEXT_PUBLIC_STRAPI_API_URL }}
          NEXT_PUBLIC_STORAGE_HOST: ${{ vars.NEXT_PUBLIC_STORAGE_HOST }}
          NEXT_PUBLIC_CSE_ID: ${{ vars.NEXT_PUBLIC_CSE_ID }}
          NEXT_PUBLIC_PAGE_SIZE: ${{ vars.NEXT_PUBLIC_PAGE_SIZE }}
          NEXT_PUBLIC_HOME_PAGE_SIZE: ${{ vars.NEXT_PUBLIC_HOME_PAGE_SIZE }}
          STRAPI_API_URL: ${{ vars.STRAPI_API_URL }}
  e2e-tests:
    timeout-minutes: 60
    environment:
      name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Install dependencies
        run: npm ci
      - name: Build NextJS
        run: npm run build
        env:
          NEXT_PUBLIC_SITE_URL: ${{ vars.NEXT_PUBLIC_STRAPI_API_URL }}
          NEXT_PUBLIC_SITE_NAME: ${{ vars.NEXT_PUBLIC_SITE_NAME }}
          NEXT_PUBLIC_STRAPI_API_URL: ${{ vars.NEXT_PUBLIC_STRAPI_API_URL }}
          NEXT_PUBLIC_STORAGE_HOST: ${{ vars.NEXT_PUBLIC_STORAGE_HOST }}
          NEXT_PUBLIC_CSE_ID: ${{ vars.NEXT_PUBLIC_CSE_ID }}
          NEXT_PUBLIC_PAGE_SIZE: ${{ vars.NEXT_PUBLIC_PAGE_SIZE }}
          NEXT_PUBLIC_HOME_PAGE_SIZE: ${{ vars.NEXT_PUBLIC_HOME_PAGE_SIZE }}
          STRAPI_API_URL: ${{ vars.STRAPI_API_URL }}
      - name: Get Playwright Version
        run: echo "PLAYWRIGHT_VERSION=$(npm show playwright version)" >> $GITHUB_ENV
      - name: Cache playwright binaries
        uses: actions/cache@v4
        id: playwright-cache
        with:
          path: |
            ~/.cache/ms-playwright
          key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: npm run test:e2e
        env:
          NEXT_PUBLIC_SITE_URL: ${{ vars.NEXT_PUBLIC_STRAPI_API_URL }}
          NEXT_PUBLIC_SITE_NAME: ${{ vars.NEXT_PUBLIC_SITE_NAME }}
          NEXT_PUBLIC_STRAPI_API_URL: ${{ vars.NEXT_PUBLIC_STRAPI_API_URL }}
          NEXT_PUBLIC_STORAGE_HOST: ${{ vars.NEXT_PUBLIC_STORAGE_HOST }}
          NEXT_PUBLIC_CSE_ID: ${{ vars.NEXT_PUBLIC_CSE_ID }}
          NEXT_PUBLIC_PAGE_SIZE: ${{ vars.NEXT_PUBLIC_PAGE_SIZE }}
          NEXT_PUBLIC_HOME_PAGE_SIZE: ${{ vars.NEXT_PUBLIC_HOME_PAGE_SIZE }}
          STRAPI_API_URL: ${{ vars.STRAPI_API_URL }}
      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
